// <auto-generated />
using System;
using Happy5ChatTest.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Happy5ChatTest.Migrations
{
    [DbContext(typeof(APIDbContext))]
    partial class APIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Happy5ChatTest.Models.Group", b =>
                {
                    b.Property<Guid>("groupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("users")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("groupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Happy5ChatTest.Models.Message", b =>
                {
                    b.Property<Guid>("chatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("groupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("message")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<Guid>("recieverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("seen")
                        .HasColumnType("bit");

                    b.Property<Guid>("senderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("timeSent")
                        .HasColumnType("datetime2");

                    b.HasKey("chatId");

                    b.HasIndex("groupId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Happy5ChatTest.Models.User", b =>
                {
                    b.Property<Guid>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Happy5ChatTest.Models.Message", b =>
                {
                    b.HasOne("Happy5ChatTest.Models.Group", "Group")
                        .WithMany("messages")
                        .HasForeignKey("groupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Happy5ChatTest.Models.Group", b =>
                {
                    b.Navigation("messages");
                });
#pragma warning restore 612, 618
        }
    }
}
